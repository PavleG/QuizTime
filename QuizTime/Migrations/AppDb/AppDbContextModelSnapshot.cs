// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizTime.Models;

namespace QuizTime.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuizTime.Models.QuestionModel", b =>
                {
                    b.Property<int>("QuestionModelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrectAnswer");

                    b.Property<string>("QuestionFormulation");

                    b.Property<int?>("QuizModelID");

                    b.Property<string>("WrongAnswer");

                    b.HasKey("QuestionModelID");

                    b.HasIndex("QuizModelID");

                    b.ToTable("QuestionModel");
                });

            modelBuilder.Entity("QuizTime.Models.QuizModel", b =>
                {
                    b.Property<int>("QuizModelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Category");

                    b.Property<string>("Title");

                    b.HasKey("QuizModelID");

                    b.ToTable("ListOfQuizzes");
                });

            modelBuilder.Entity("QuizTime.Models.QuestionModel", b =>
                {
                    b.HasOne("QuizTime.Models.QuizModel")
                        .WithMany("Questions")
                        .HasForeignKey("QuizModelID");
                });
#pragma warning restore 612, 618
        }
    }
}
